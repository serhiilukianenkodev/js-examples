// Test 1

// –û–±—ä—è–≤–∏ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, productName –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –∏ pricePerItem –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –∑–∞ —à—Ç—É–∫—É. –ü—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –ø—Ä–∏—Å–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —Å–ª–µ–¥—É—é—â–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä–∞:

// –Ω–∞–∑–≤–∞–Ω–∏–µ - —Å—Ç—Ä–æ–∫–∞ "Droid"
// —Ü–µ–Ω–∞ –∑–∞ —à—Ç—É–∫—É - —á–∏—Å–ª–æ 2000
// –û–±—ä—è–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è productName
// –ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π productName —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ "Droid"
// –û–±—ä—è–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è pricePerItem
// –ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π pricePerItem —ç—Ç–æ —á–∏—Å–ª–æ 2000

// Change code below this line
// const productName = "Droid";
// const pricePerItem = 2000;
// console.log(productName);
// // 'Droid'

// console.log(pricePerItem);
// 2000

// Test 2

// –ò–º—è —Ç–æ–≤–∞—Ä–∞ –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞ "Repair droid" –∏ —É–≤–µ–ª–∏—á–∏–ª–∏ –µ–≥–æ —Ü–µ–Ω—É –Ω–∞ 1500 –∫—Ä–µ–¥–∏—Ç–æ–≤.
//  –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö pricePerItem –∏ productName –ø–æ—Å–ª–µ –∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏—è.

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è pricePerItem –æ–±—ä—è–≤–ª–µ–Ω–∞ —Å –ø–æ–º–æ—â—å—é let
// –ü—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π pricePerItem –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ - —á–∏—Å–ª–æ 2000
// –ü–µ—Ä–µ–º–µ–Ω–Ω–æ–π pricePerItem –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –±–æ–ª—å—à–µ —á–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –Ω–∞ 1500
// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è productName –æ–±—ä—è–≤–ª–µ–Ω–∞ —Å –ø–æ–º–æ—â—å—é let
// –ü—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π productName –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ - —Å—Ç—Ä–æ–∫–∞ "Droid"

// let productName = "Droid";
// let pricePerItem = 2000;

// productName = "Repair droid";
// pricePerItem += 1500;

// **********************

// –ü–æ—Å—á–∏—Ç–∞–µ—Ç –∏ –≤—ã–≤–µ–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ ul#categories, —Ç–æ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ li.item.
// –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ li.item –≤ —Å–ø–∏—Å–∫–µ ul#categories, –Ω–∞–π–¥–µ—Ç –∏ –≤—ã–≤–µ–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–µ–∫—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ (—Ç–µ–≥–∞ <h2>) –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤ –Ω–µ–≥–æ <li>).
// –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ forEach() –∏ —Å–≤–æ–π—Å—Ç–≤–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ DOM.

// –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ, –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—É–¥—É—Ç –≤—ã–≤–µ–¥–µ–Ω—ã —Ç–∞–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.

// Number of categories: 3

// Category: Animals
// Elements: 4

// Category: Products
// Elements: 3

// Category: Technologies
// Elements: 5

// const refs = {
//   categories: document.querySelector("#categories"),
// };

// console.log("Number of categories: ", refs.categories.children.length);

// [...refs.categories.children].forEach((item) => {
//   //   console.dir(item);
//   const firstEl = item.firstElementChild.textContent;
//   const secondEl = item.lastElementChild.children.length;
//   console.log("Category:", firstEl);
//   console.log("Elements:", secondEl);
// });

//***************************** */

// –ó–∞–¥–∞–Ω–∏–µ 2
// –í HTML –µ—Å—Ç—å –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ ul#ingredients.

// <ul id="ingredients"></ul>

// –í JavaScript –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.

// const ingredients = [
//   "Potatoes",
//   "Mushrooms",
//   "Garlic",
//   "Tomatos",
//   "Herbs",
//   "Condiments",
// ];

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ ingredients:

// –°–æ–∑–¥–∞—Å—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç <li>. –û–±–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π –º–µ—Ç–æ–¥ document.createElement().
// –î–æ–±–∞–≤–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞ –∫–∞–∫ –µ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.
// –î–æ–±–∞–≤–∏—Ç —ç–ª–µ–º–µ–Ω—Ç—É –∫–ª–∞—Å—Å item.
// –ü–æ—Å–ª–µ —á–µ–≥–æ –≤—Å—Ç–∞–≤–∏—Ç –≤—Å–µ <li> –∑–∞ –æ–¥–Ω—É –æ–ø–µ—Ä–∞—Ü–∏—é –≤ —Å–ø–∏—Å–æ–∫ ul#ingredients.

// const ingredients = [
//   "Potatoes",
//   "Mushrooms",
//   "Garlic",
//   "Tomatos",
//   "Herbs",
//   "Condiments",
// ];

// const ingredientsListEl = document.querySelector("#ingredients");

// const ingredientsEl = ingredients.map((elem) => {
//   const ingredientEl = document.createElement("li");
//   ingredientEl.textContent = elem;
//   ingredientEl.classList.add("item");

//   return ingredientEl;
// });

// ingredientsListEl.append(...ingredientsEl);

// ******** task 3 *******

// const images = [
//   {
//     url: "https://images.pexels.com/photos/140134/pexels-photo-140134.jpeg?dpr=2&h=750&w=1260",
//     alt: "White and Black Long Fur Cat",
//   },
//   {
//     url: "https://images.pexels.com/photos/213399/pexels-photo-213399.jpeg?dpr=2&h=750&w=1260",
//     alt: "Orange and White Koi Fish Near Yellow Koi Fish",
//   },
//   {
//     url: "https://images.pexels.com/photos/219943/pexels-photo-219943.jpeg?dpr=2&h=750&w=1260",
//     alt: "Group of Horses Running",
//   },
// ];

// const galleryEl = document.querySelector(".gallery");

// function createGalleryItem({ url, alt }) {
//   return `<li class="gallerey__item"><img class="gallery__img" src="${url}" alt="${alt}"></li>`;
// }

// const galleryMarkup = images.map(createGalleryItem).join("");

// galleryEl.insertAdjacentHTML("afterbegin", galleryMarkup);

// ***************task 4*************

// const refs = {
//   counter: document.querySelector("#counter"),
//   decrementBtn: counter.querySelector("button[data-action='decrement']"),
//   incrementBtn: counter.querySelector("button[data-action='increment']"),
//   outputField: counter.querySelector("#value"),
// };

// let counterValue = 0;
// updateValue(counterValue);
// // console.log("üöÄ ~ refs.outputField:", refs.outputField.textContent);
// // console.log("üöÄ ~ decrementBtn:", refs.decrementBtn);
// // console.log("üöÄ ~ incrementBtn:", refs.incrementBtn);

// refs.decrementBtn.addEventListener("click", () => {
//   counterValue -= 1;
//   updateValue(counterValue);
// });

// refs.incrementBtn.addEventListener("click", () => {
//   counterValue += 1;
//   updateValue(counterValue);
// });

// function updateValue(value) {
//   refs.outputField.textContent = value;
// }

// ************task5************

// const inputEl = document.querySelector("#name-input");
// const outputEl = document.querySelector("#name-output");

// inputEl.addEventListener("input", onInput);

// function onInput(evt) {
//   let value = evt.currentTarget.value;

//   outputEl.textContent = !value ? "Anonymous" : value;
// }

// **********task 6***********

// const inputEl = document.querySelector("#validation-input");

// inputEl.addEventListener("blur", onInputBlur);

// function onInputBlur(evt) {
//   if (evt.currentTarget.value.length === Number(inputEl.dataset.length)) {
//     inputEl.classList.add("valid");
//     inputEl.classList.remove("invalid");
//   } else {
//     inputEl.classList.add("invalid");
//     inputEl.classList.remove("valid");
//   }
// }

// ************task 7*********

// const inputEl = document.querySelector("#font-size-control");
// const outputEl = document.querySelector("#text");
// console.log("üöÄ ~ inputEl:", inputEl);

// inputEl.addEventListener("input", onInput);

// function onInput(evt) {
//   outputEl.style.fontSize = `${evt.currentTarget.value}px`;
// }

//------------task 8---------------

// const formEl = document.querySelector(".login-form");

// formEl.addEventListener("submit", onFormSubmit);

// function onFormSubmit(evt) {
//   evt.preventDefault();
//   const email = evt.target.elements.email.value;
//   const password = evt.target.elements.password.value;
//   if (!email || !password) {
//     alert("–í—Å—ñ –ø–æ–ª—è —Ñ–æ—Ä–º–∏ –º–∞—é—Ç—å –±—É—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ");
//     return;
//   }
//   console.log({
//     email,
//     password,
//   });
//   evt.currentTarget.reset();
// }

// ---------------task 9 --------------
// const refs = {
//   btnChange: document.querySelector(".change-color"),
//   field: document.querySelector(".color"),
//   body: document.querySelector("body"),
// };

// refs.btnChange.addEventListener("click", onBtnClick);

// function onBtnClick() {
//   const randomColor = getRandomHexColor();

//   refs.field.textContent = randomColor;
//   refs.body.style.backgroundColor = randomColor;
// }

// function getRandomHexColor() {
//   return `#${Math.floor(Math.random() * 16777215)
//     .toString(16)
//     .padStart(6, 0)}`;
// }

// ------------task 10 -----------

// const refs = {
//   controls: document.querySelector("#controls"),
//   boxes: document.querySelector("#boxes"),
//   input: controls.querySelector("input"),
//   createBtn: controls.querySelector("button[data-create]"),
//   destroyBtn: controls.querySelector("button[data-destroy]"),
// };

// refs.createBtn.addEventListener("click", onCreateBtnClick);
// refs.destroyBtn.addEventListener("click", destroyBoxes);

// function onCreateBtnClick() {
//   createBoxes(refs.input.value);
// }

// function getRandomHexColor() {
//   return `#${Math.floor(Math.random() * 16777215)
//     .toString(16)
//     .padStart(6, 0)}`;
// }

// function createBoxes(amount) {
//   let markup = "";
//   for (let i = 0; i < amount; i += 1) {
//     markup += `<div style="width: ${30 + i * 10}px; height: ${
//       30 + i * 10
//     }px; background-color: ${getRandomHexColor()}"></div>`;
//   }

//   refs.boxes.innerHTML = markup;
// }

// function destroyBoxes() {
//   refs.boxes.innerHTML = "";
// }

// ---------------------------------

// // –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ —à—É–∫–∞—Ç–∏ –Ω–∞—Ä—Ü–∏—Å–∞. –ì–æ–ª–æ–≤–Ω–∞ —É–º–æ–≤–∞ –Ω–∞—Ä—Ü–∏—Å–∞ –∑–Ω–∞—é—Ç—å –≤—Å—ñ, –Ω–∞—Ä—Ü–∏—Å –Ω–µ –∑–Ω–∞—î –Ω—ñ–∫–æ–≥–æ.
// // Not found
// const people1 = [
//   {
//     name: "Alex",
//     know: ["Eva", "Jhon"],
//   },
//   {
//     name: "Ivan",
//     know: ["Jhon", "Alex"],
//   },
//   {
//     name: "Eva",
//     know: ["Alex", "Jhon"],
//   },
//   {
//     name: "Jhon",
//     know: ["Alex"],
//   },
// ];
// //Not found
// const people2 = [
//   {
//     name: "Alex",
//     know: ["Eva", "Jhon"],
//   },
//   {
//     name: "Jhon",
//     know: [],
//   },
//   {
//     name: "Eva",
//     know: [],
//   },
//   {
//     name: "Ivan",
//     know: ["Jhon", "Alex"],
//   },
// ];

// // jhon
// const people3 = [
//   {
//     name: "Alex",
//     know: ["Eva", "Jhon"],
//   },
//   {
//     name: "Jhon",
//     know: [],
//   },
//   {
//     name: "Eva",
//     know: ["Alex", "Jhon"],
//   },
//   {
//     name: "Ivan",
//     know: ["Jhon", "Alex"],
//   },
// ];

// function findNarthiss(people) {
//   let isKnown = "not found";
//   for (let i = 0; i < people.length; i++) {
//     const currentPerson = people[i];

//     if (currentPerson.know.length) {
//       continue;
//     }

//     const isFind = people.every(({ name, know }) => {
//       return know.includes(currentPerson.name) || currentPerson.name === name;
//     });

//     if (isFind) {
//       return currentPerson.name;
//     }
//   }
//   return isKnown;
// }

// console.log(findNarthiss(people3));

// --------------------------------------------------------------------------------------------------------//

// // –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –º–∞—Å–∏–≤ —Ñ—ñ–ª—å–º—ñ–≤ (films) –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É —è–≤–ª—è—î—Ç—å—Å—è –æ–±'—î–∫—Ç–æ–º –≤ —è–∫–æ–≥–æ —î –Ω–∞–∑–≤–∞ —Ñ—ñ–ª—å–º—É —Ç–∞ –º–∞—Å–∏–≤ –∑ –∂–∞–Ω—Ä–∞–º–∏ –¥–æ —è–∫–∏—Ö –≤—ñ–Ω –≤—ñ–¥–Ω–æ—Å–∏—Ç—å—Å—è,
// // –∞–ª–µ –≤ –º–∞—Å–∏–≤—ñ(genreIDs) —Ç—ñ–ª—å–∫–∏ ID —Ü–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤.
// // –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤ –∫–æ–∂–µ–Ω –æ–±'—î–∫—Ç –¥–æ–¥–∞—Ç–∏ –∫–ª—é—á genreNames —è–∫–∏–π –±—É–¥–µ –º–∞—Å–∏–≤–æ–º –∑ –Ω–∞–∑–≤–∞–º–∏ –∂–∞–Ω—Ä—ñ–≤ –¥–æ —è–∫–∏—Ö —Ü–µ–π —Ñ—ñ–ª—å–º –≤—ñ–¥–Ω–æ—Å–∏—Ç—å—Å—è.
// // –ü—ñ—Å–ª—è —á–æ–≥–æ –≤—ñ–¥—Ä–µ–Ω–¥–µ—Ä–∏—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ñ—ñ–ª—å–º—ñ–≤ —è–∫ –Ω–∞–≤–µ–¥–µ–Ω–æ –≤ –ø—Ä–∏–∫–ª–∞–¥—ñ –Ω–∏–∂—á–µ(Expected result), —è–∫—â–æ –≤ —Å–ø–∏—Å–∫—É –∂–∞–Ω—Ä—ñ–≤ –±—ñ–ª—å—à –Ω—ñ–∂ 2 —Ñ—ñ–ª—å–º–∏ —Ç–æ–¥—ñ —Ä–µ–Ω–¥–µ—Ä–∏–º–æ –Ω–∞–∑–≤—É –ø–µ—Ä—à–∏—Ö –¥–≤–æ—Ö –∂–∞–Ω—Ä—ñ–≤,
// // –∞ –≤—Å—ñ —ñ–Ω—à—ñ –∑–∞–º—ñ–Ω—é—î–º–æ –Ω–∞ "Others".
// // –°–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è ID –∂–∞–Ω—Ä—É —Ç–∞ –Ω–∞–∑–≤–∏ –∂–∞–Ω—Ä—É –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –æ–±'—î–∫—Ç—ñ genresInfo.

// // //Object example
// // {
// //     title: "Interceptor",
// //     genreIDs: [
// //         28,
// //         53,
// //         12,
// //     ],
// //     genreNames: [
// //         "Action",
// //         "Thriller",
// //         "Adventure"
// //     ]
// // }

// ////  Expected result
// // Films list:
// // 1. 'Interceptor: Action, Thriller, Others.'
// // 2. 'Fantastic Beasts: The Secrets of Dumbledore: Fantasy, Adventure, Others.'
// // 3. 'Last Seen Alive: Action, Thriller.'
// // 4. 'Jurassic World Dominion: Science Fiction, Action, Others.'

// function renderFilms(films) {
//   {
//     console.log("Films list:");
//     return films.map(({ title, genreNames }, i) => {
//       const renderedGenres = genreNames.slice(0, 2);
//       if (genreNames.length > 2) renderedGenres.push("Others");

//       console.log(`${i + 1}. '${title}: ${renderedGenres.join(", ")}...'`);
//     });
//   }
// }

// const films = [
//   {
//     title: "Interceptor",
//     genreIDs: [28, 53, 12],
//   },
//   {
//     title: "Fantastic Beasts: The Secrets of Dumbledore",
//     genreIDs: [14, 12, 28],
//   },
//   {
//     title: "Last Seen Alive",
//     genreIDs: [28, 53],
//   },
//   {
//     title: "Jurassic World Dominion",
//     genreIDs: [878, 28, 12, 53],
//   },
// ];

// const genresInfo = {
//   genres: [
//     {
//       id: 28,
//       name: "Action",
//     },
//     {
//       id: 12,
//       name: "Adventure",
//     },
//     {
//       id: 14,
//       name: "Fantasy",
//     },
//     {
//       id: 878,
//       name: "Science Fiction",
//     },
//     {
//       id: 53,
//       name: "Thriller",
//     },
//     {
//       id: 10752,
//       name: "War",
//     },
//     {
//       id: 37,
//       name: "Western",
//     },
//   ],
// };

// const filmsWithGenres = addGenres(films);
// console.log("üöÄ ~ filmsWithGenres:", filmsWithGenres);
// renderFilms(filmsWithGenres);

// function addGenres(films) {
//   return films.map((film) => {
//     return {
//       ...film,
//       genreNames: film.genreIDs.map((id) =>
//         findGenreById(id, genresInfo.genres)
//       ),
//     };
//   });
// }

// function findGenreById(id, genres) {
//   return genres.find((genre) => genre.id === id).name;
// }

// //     .

// --------------------------------------------------------------------------------------------------------//

// // –†–µ–∞–ª—ñ–∑—É–π—Ç–µ –∫–ª–∞—Å Student, —è–∫–∏–π —É—Å–ø–∞–¥–∫–æ–≤—É–≤–∞—Ç–∏–º–µ—Ç—å—Å—è –≤—ñ–¥ –∫–ª–∞—Å—É User. –¶–µ–π –∫–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ —Ç–∞–∫—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:
// // name –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (—ñ–º'—è, —É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User),
// // surname –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (–ø—Ä—ñ–∑–≤–∏—â–µ, —É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User),
// // year (—Ä—ñ–∫ –≤—Å—Ç—É–ø—É –¥–æ –≤—É–∑—É).
// // –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –º–µ—Ç–æ–¥ getFullName() (—É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User), –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —è–∫–æ–≥–æ –º–æ–∂–Ω–∞ –≤–∏–≤–µ—Å—Ç–∏ –æ–¥–Ω–æ—á–∞—Å–Ω–æ —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ —Å—Ç—É–¥–µ–Ω—Ç–∞.
// // –¢–∞–∫–æ–∂ –∫–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –º–µ—Ç–æ–¥ getCourse(), —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç–∏–º–µ –ø–æ—Ç–æ—á–Ω–∏–π –∫—É—Ä—Å —Å—Ç—É–¥–µ–Ω—Ç–∞ (–≤—ñ–¥ 1 –¥–æ 5, —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–µ—Ä–µ–≤–∏—â—É—î 5  –∫—É—Ä—Å –≤–∏–≤–æ–¥–∏—Ç–∏ —â–æ —Å—Ç—É–¥–µ–Ω—Ç —è–≤–ª—è—î—Ç—Å—å—è –≤–∏–ø—É—Å–∫–Ω–∏–∫–æ–º).
// // –ö—É—Ä—Å –æ–±—á–∏—Å–ª—é—î—Ç—å—Å—è —Ç–∞–∫: –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä–æ–∫—É –≤—ñ–¥–Ω—è—Ç–∏ —Ä—ñ–∫ –≤—Å—Ç—É–ø—É –¥–æ –≤—É–∑—É. –ü–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–∫ –æ—Ç—Ä–∏–º–∞—î—Ç–µ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ (—á–∏—Ç–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é!!!).
// // –ü—Ä–∏–∫–ª–∞–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –µ–∫–∑–µ–º–ø–ª—è—Ä—É –∫–ª–∞—Å–∞:
// // const student = new Student('–ü–µ—Ç—Ä–∏–∫', '–ü—è—Ç–æ—á–∫–∏–Ω', 2019);

// // student.getFullName(); //–ø–æ–≤–µ—Ä–Ω–µ '–ü–µ—Ç—Ä–∏–∫ –ü—è—Ç–æ—á–∫–∏–Ω'
// // student.getCourse();   //–ø–æ–≤–µ—Ä–Ω–µ 3 (—Ç—Ä–µ—Ç—ñ–π –∫—É—Ä—Å)

// class User {
//   #name;
//   #surname;
//   constructor(name, surname) {
//     this.#name = name;
//     this.#surname = surname;
//   }

//   getFullName() {
//     const result = `${this.#name} ${this.#surname}`;
//     console.log(result);
//     return result;
//   }
// }

// class Student extends User {
//   static Current_YEAR = new Date().getFullYear();
//   constructor(name, surname, year) {
//     super(name, surname);
//     this.year = year;
//   }

//   getCourse() {
//     const course = Student.Current_YEAR - this.year;
//     const result = course > 5 ? "–í–∏–ø—É—Å–∫–Ω–∏–∫" : course;
//     console.log(result);
//     return result;
//   }
// }

// const student = new Student("–ü–µ—Ç—Ä–∏–∫", "–ü—è—Ç–æ—á–∫–∏–Ω", 2019);

// student.getFullName(); //–ø–æ–≤–µ—Ä–Ω–µ '–ü–µ—Ç—Ä–∏–∫ –ü—è—Ç–æ—á–∫–∏–Ω'
// student.getCourse(); //–ø–æ–≤–µ—Ä–Ω–µ 3 (—Ç—Ä–µ—Ç—ñ–π –∫—É—Ä—Å)
